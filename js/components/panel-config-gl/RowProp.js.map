{"version":3,"sources":["../../../src/components/panel-config-gl/RowProp.jsx"],"names":["RowProp","props","_handleSetValue","onGetComp","propKey","fnAfterSet","comp","inputFloat","getValue","_setModeToAll","mode","bt","labelBy","inputId","value","styleLabel","ROW","Object","assign","LABEL_ROW","INPUT_FLOAT_3","_onChangeMode","bind","propTypes","string","isRequired","number","object","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAKMA,O;;;AAUJ,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA,gIACVA,KADU;;AAAA,UASlBC,eATkB,GASA,YAAM;AAAA,wBACqB,MAAKD,KAD1B;AAAA,UACdE,SADc,eACdA,SADc;AAAA,UACHC,OADG,eACHA,OADG;AAAA,UACMC,UADN,eACMA,UADN;AAAA,UAEhBC,IAFgB,GAETH,WAFS;;AAGtBG,WAAKF,OAAL,IAAgB,MAAKG,UAAL,CAAgBC,QAAhB,EAAhB;;AAEA,UAAI,OAAOH,UAAP,KAAsB,UAA1B,EAAqC;AACnCA,mBAAWC,IAAX;AACD;AACD,YAAKG,aAAL,CAAmB,CAAnB;AACD,KAlBiB;;AAGhB,UAAKC,IAAL,GAAY;AACVH,kBAAa,CADH;AAEVI,UAAK;AAFK,KAAZ;AAHgB;AAOjB;;;;6BAaO;AAAA;;AAAA,mBAC0C,KAAKV,KAD/C;AAAA,UACEW,OADF,UACEA,OADF;AAAA,UACWC,OADX,UACWA,OADX;AAAA,UACoBC,KADpB,UACoBA,KADpB;AAAA,UAC2BC,UAD3B,UAC2BA,UAD3B;;AAEN,aACE;AAAA;AAAA,UAAK,OAAO,cAAMC,GAAlB;AACE;AACE,iBAAOC,OAAOC,MAAP,CAAc,EAAd,EAAkB,cAAMC,SAAxB,EAAmCJ,UAAnC,CADT;AAEE,iBAAOH,OAFT;AAGE,cAAIC;AAHN,UADF;AAME;AACE,eAAM;AAAA,mBAAQ,OAAKN,UAAL,GAAkBD,IAA1B;AAAA,WADR;AAEE,cAAIO,OAFN;AAGE,oBAAS,YAHX;AAIE,sBAAY,cAAMO,aAJpB;AAKE,iBAAON,KALT;AAME,gBAAM,KANR;AAOE,wBAAc,KAAKO,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAPhB;AAQE,0BAAgB,KAAKpB;AARvB,UANF;AAgBE;AACI,eAAM;AAAA,mBAAM,OAAKS,EAAL,GAAUA,EAAhB;AAAA,WADV;AAEI,mBAAS,KAAKT;AAFlB;AAhBF,OADF;AAuBD;;;;;wCAvDGF,O,CACGuB,S,GAAY;AACjBX,WAAS,iBAAUY,MAAV,CAAiBC,UADT;AAEjBX,SAAO,iBAAUY,MAAV,CAAiBD,UAFP;AAGjBrB,WAAS,iBAAUoB,MAAV,CAAiBC,UAHT;AAIjBV,cAAY,iBAAUY,MAJL;AAKjBxB,aAAW,iBAAUyB,IAAV,CAAeH,UALT;AAMjBpB,cAAY,iBAAUuB;AANL,C;kBAyDN5B,O","file":"RowProp.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nimport setModeToAll from './decorators/setModeToAll';\r\nimport onChangeMode from './decorators/onChangeMode';\r\nimport calcInputMode from './decorators/calcInputMode';\r\n\r\nimport Label from '../zhn-atoms/Label';\r\nimport InputFloat from '../zhn-atoms/InputFloat';\r\nimport ButtonSet from '../zhn-atoms/ButtonSet';\r\n\r\nimport STYLE from './Row.Style'\r\n\r\n@setModeToAll\r\n@onChangeMode\r\n@calcInputMode\r\nclass RowProp extends Component{\r\n  static propTypes = {\r\n    labelBy: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    propKey: PropTypes.string.isRequired,\r\n    styleLabel: PropTypes.object,\r\n    onGetComp: PropTypes.func.isRequired,\r\n    fnAfterSet: PropTypes.func\r\n  }\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.mode = {\r\n      inputFloat : 2,\r\n      bt : 2\r\n    }\r\n  }\r\n\r\n  _handleSetValue = () => {\r\n    const { onGetComp, propKey, fnAfterSet } = this.props\r\n        , comp = onGetComp();\r\n    comp[propKey] = this.inputFloat.getValue();\r\n\r\n    if (typeof fnAfterSet === 'function'){\r\n      fnAfterSet(comp);\r\n    }\r\n    this._setModeToAll(2);\r\n  }\r\n\r\n  render(){\r\n    const { labelBy, inputId, value, styleLabel } = this.props\r\n    return (\r\n      <div style={STYLE.ROW}>\r\n        <Label\r\n          style={Object.assign({}, STYLE.LABEL_ROW, styleLabel)}\r\n          title={labelBy}\r\n          id={inputId}\r\n        />\r\n        <InputFloat\r\n          ref={ comp => this.inputFloat = comp }\r\n          id={inputId}\r\n          inputKey=\"inputFloat\"\r\n          inputStyle={STYLE.INPUT_FLOAT_3}\r\n          value={value}\r\n          step={0.001}\r\n          onChangeMode={this._onChangeMode.bind(this)}\r\n          onKeyDownEnter={this._handleSetValue}\r\n        />\r\n        <ButtonSet\r\n            ref={ bt => this.bt = bt }\r\n            onClick={this._handleSetValue}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RowProp\r\n"]}