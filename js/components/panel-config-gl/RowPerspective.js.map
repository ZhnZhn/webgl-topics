{"version":3,"sources":["../../../src/components/panel-config-gl/RowPerspective.jsx"],"names":["RowPerspective","setModeToAll","onChangeMode","calcInputMode","props","_handleSetPerspective","comp","onGetComp","near","far","perspectiveNear","getValue","perspectiveFar","createPerspective","_setModeToAll","mode","bt","render","_onChangeMode","bind","STYLE","ROW","CAPTION","LABEL","INPUT_FLOAT_2","Component","propTypes","PropTypes","number","isRequire","isRequired","func"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;;;IAKMA,c,OAHLC,wB,eACAC,wB,eACAC,yB;;;;;AAQC,0BAAYC,KAAZ,EAAkB;AAAA;;AAChB;;AADgB,UASlBC,qBATkB,GASM,YAAM;AACtB,UAAAC,IAAI,GAAG,MAAKF,KAAL,CAAWG,SAAX,EAAP;AAAA;AAAA,UACEC,IADF,yBACEA,IADF;AAAA,UACQC,GADR,yBACQA,GADR;;AAGNH,MAAAA,IAAI,CAACI,eAAL,GAAuBF,IAAI,CAACG,QAAL,EAAvB;AACAL,MAAAA,IAAI,CAACM,cAAL,GAAsBH,GAAG,CAACE,QAAJ,EAAtB;AACAL,MAAAA,IAAI,CAACO,iBAAL,CAAuBP,IAAvB;;AAEA,YAAKQ,aAAL,CAAmB,CAAnB;AACD,KAlBiB;;AAEhB,UAAKC,IAAL,GAAY;AACVP,MAAAA,IAAI,EAAG,CADG;AAEVC,MAAAA,GAAG,EAAG,CAFI;AAGVO,MAAAA,EAAE,EAAG;AAHK,KAAZ;AAFgB;AAOjB;;;;SAcDC,M,GAAA,kBAAQ;AAAA;;AAAA,sBACsC,KAAKb,KAD3C;AAAA,QACEM,eADF,eACEA,eADF;AAAA,QACmBE,cADnB,eACmBA,cADnB;AAAA,QAEAV,YAFA,GAEe,KAAKgB,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAFf;;AAGN,WACE;AAAK,MAAA,KAAK,EAAEC,gBAAMC;AAAlB,OACE,gCAAC,iBAAD;AACE,MAAA,KAAK,EAAED,gBAAME,OADf;AAEE,MAAA,KAAK,EAAC;AAFR,MADF,EAKE,gCAAC,iBAAD;AACE,MAAA,KAAK,EAAEF,gBAAMG,KADf;AAEE,MAAA,KAAK,EAAC;AAFR,MALF,EASE,gCAAC,sBAAD;AACE,MAAA,GAAG,EAAG,aAAAjB,IAAI;AAAA,eAAI,MAAI,CAACE,IAAL,GAAYF,IAAhB;AAAA,OADZ;AAEE,MAAA,QAAQ,EAAC,MAFX;AAGE,MAAA,UAAU,EAAEc,gBAAMI,aAHpB;AAIE,MAAA,KAAK,EAAEd,eAJT;AAKE,MAAA,YAAY,EAAER,YALhB;AAME,MAAA,cAAc,EAAE,KAAKG;AANvB,MATF,EAiBE,gCAAC,iBAAD;AACE,MAAA,KAAK,EAAEe,gBAAMG,KADf;AAEE,MAAA,KAAK,EAAC;AAFR,MAjBF,EAqBE,gCAAC,sBAAD;AACE,MAAA,GAAG,EAAG,aAAAjB,IAAI;AAAA,eAAI,MAAI,CAACG,GAAL,GAAWH,IAAf;AAAA,OADZ;AAEE,MAAA,QAAQ,EAAC,KAFX;AAGE,MAAA,KAAK,EAAEM,cAHT;AAIE,MAAA,UAAU,EAAEQ,gBAAMI,aAJpB;AAKE,MAAA,YAAY,EAAEtB,YALhB;AAME,MAAA,cAAc,EAAE,KAAKG;AANvB,MArBF,EA6BE,gCAAC,qBAAD;AACG,MAAA,GAAG,EAAG,aAAAW,EAAE;AAAA,eAAI,MAAI,CAACA,EAAL,GAAUA,EAAd;AAAA,OADX;AAEG,MAAA,OAAO,EAAE,KAAKX;AAFjB,MA7BF,CADF;AAoCD,G;;;EAnE0BoB,gB,WACpBC,S,GAAY;AACjBhB,EAAAA,eAAe,EAAGiB,iBAAUC,MAAV,CAAiBC,SADlB;AAEjBjB,EAAAA,cAAc,EAAGe,iBAAUC,MAAV,CAAiBE,UAFjB;AAGjBvB,EAAAA,SAAS,EAAGoB,iBAAUI,IAAV,CAAeD;AAHV,C;;eAqEN9B,c","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nimport setModeToAll from './decorators/setModeToAll';\r\nimport onChangeMode from './decorators/onChangeMode';\r\nimport calcInputMode from './decorators/calcInputMode';\r\n\r\nimport Label from '../zhn-atoms/Label';\r\nimport InputFloat from '../zhn-atoms/InputFloat';\r\nimport ButtonSet from '../zhn-atoms/ButtonSet';\r\n\r\nimport  STYLE from './Row.Style';\r\n\r\n@setModeToAll\r\n@onChangeMode\r\n@calcInputMode\r\nclass RowPerspective extends Component {\r\n  static propTypes = {\r\n    perspectiveNear : PropTypes.number.isRequire,\r\n    perspectiveFar : PropTypes.number.isRequired,\r\n    onGetComp : PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n    this.mode = {\r\n      near : 2,\r\n      far : 2,\r\n      bt : 2\r\n    }\r\n  }\r\n\r\n  _handleSetPerspective = () => {\r\n    const comp = this.props.onGetComp()\r\n        , { near, far } = this\r\n\r\n    comp.perspectiveNear = near.getValue()\r\n    comp.perspectiveFar = far.getValue();\r\n    comp.createPerspective(comp);\r\n\r\n    this._setModeToAll(2);\r\n  }\r\n\r\n\r\n  render(){\r\n    const { perspectiveNear, perspectiveFar } = this.props\r\n        , onChangeMode = this._onChangeMode.bind(this)\r\n    return(\r\n      <div style={STYLE.ROW}>\r\n        <Label\r\n          style={STYLE.CAPTION}\r\n          title=\"perspective:\"\r\n        />\r\n        <Label\r\n          style={STYLE.LABEL}\r\n          title=\"near:\"\r\n        />\r\n        <InputFloat\r\n          ref={ comp => this.near = comp }\r\n          inputKey=\"near\"\r\n          inputStyle={STYLE.INPUT_FLOAT_2}\r\n          value={perspectiveNear}\r\n          onChangeMode={onChangeMode}\r\n          onKeyDownEnter={this._handleSetPerspective}\r\n        />\r\n        <Label\r\n          style={STYLE.LABEL}\r\n          title=\"far:\"\r\n        />\r\n        <InputFloat\r\n          ref={ comp => this.far = comp }\r\n          inputKey=\"far\"\r\n          value={perspectiveFar}\r\n          inputStyle={STYLE.INPUT_FLOAT_2}\r\n          onChangeMode={onChangeMode}\r\n          onKeyDownEnter={this._handleSetPerspective}\r\n        />\r\n        <ButtonSet\r\n           ref={ bt => this.bt = bt }\r\n           onClick={this._handleSetPerspective}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RowPerspective\r\n"],"file":"RowPerspective.js"}