{"version":3,"sources":["../../../src/components/panel-config-gl/RowPerspective.jsx"],"names":["RowPerspective","props","_handleSetPerspective","onGetComp","near","far","comp","perspectiveNear","getValue","perspectiveFar","createPerspective","_setModeToAll","mode","bt","onChangeMode","_onChangeMode","bind","ROW","CAPTION","LABEL","INPUT_FLOAT_2","propTypes","number","isRequire","isRequired","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAKMA,c;;;AAOJ,0BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UASlBC,qBATkB,GASM,YAAM;AACtB,iBAAO,MAAKD,KAAL,CAAWE,SAAX,EAAP;AAAA,UACEC,IADF,SACEA,IADF;AAAA,UACQC,GADR,SACQA,GADR;;;AAGNC,WAAKC,eAAL,GAAuBH,KAAKI,QAAL,EAAvB;AACAF,WAAKG,cAAL,GAAsBJ,IAAIG,QAAJ,EAAtB;AACAF,WAAKI,iBAAL,CAAuBJ,IAAvB;;AAEA,YAAKK,aAAL,CAAmB,CAAnB;AACD,KAlBiB;;AAEhB,UAAKC,IAAL,GAAY;AACVR,YAAO,CADG;AAEVC,WAAM,CAFI;AAGVQ,UAAK;AAHK,KAAZ;AAFgB;AAOjB;;;;6BAcO;AAAA;;AAAA,mBACsC,KAAKZ,KAD3C;AAAA,UACEM,eADF,UACEA,eADF;AAAA,UACmBE,cADnB,UACmBA,cADnB;AAAA,UAEAK,YAFA,GAEe,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAFf;;AAGN,aACE;AAAA;AAAA,UAAK,OAAO,cAAMC,GAAlB;AACE;AACE,iBAAO,cAAMC,OADf;AAEE,iBAAM;AAFR,UADF;AAKE;AACE,iBAAO,cAAMC,KADf;AAEE,iBAAM;AAFR,UALF;AASE;AACE,eAAM;AAAA,mBAAQ,OAAKf,IAAL,GAAYE,IAApB;AAAA,WADR;AAEE,oBAAS,MAFX;AAGE,sBAAY,cAAMc,aAHpB;AAIE,iBAAOb,eAJT;AAKE,wBAAcO,YALhB;AAME,0BAAgB,KAAKZ;AANvB,UATF;AAiBE;AACE,iBAAO,cAAMiB,KADf;AAEE,iBAAM;AAFR,UAjBF;AAqBE;AACE,eAAM;AAAA,mBAAQ,OAAKd,GAAL,GAAWC,IAAnB;AAAA,WADR;AAEE,oBAAS,KAFX;AAGE,iBAAOG,cAHT;AAIE,sBAAY,cAAMW,aAJpB;AAKE,wBAAcN,YALhB;AAME,0BAAgB,KAAKZ;AANvB,UArBF;AA6BE;AACG,eAAM;AAAA,mBAAM,OAAKW,EAAL,GAAUA,EAAhB;AAAA,WADT;AAEG,mBAAS,KAAKX;AAFjB;AA7BF,OADF;AAoCD;;;;;wCAnEGF,c,CACGqB,S,GAAY;AACjBd,mBAAkB,iBAAUe,MAAV,CAAiBC,SADlB;AAEjBd,kBAAiB,iBAAUa,MAAV,CAAiBE,UAFjB;AAGjBrB,aAAY,iBAAUsB,IAAV,CAAeD;AAHV,C;kBAqENxB,c","file":"RowPerspective.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nimport setModeToAll from './decorators/setModeToAll';\r\nimport onChangeMode from './decorators/onChangeMode';\r\nimport calcInputMode from './decorators/calcInputMode';\r\n\r\nimport Label from '../zhn-atoms/Label';\r\nimport InputFloat from '../zhn-atoms/InputFloat';\r\nimport ButtonSet from '../zhn-atoms/ButtonSet';\r\n\r\nimport  STYLE from './Row.Style';\r\n\r\n@setModeToAll\r\n@onChangeMode\r\n@calcInputMode\r\nclass RowPerspective extends Component {\r\n  static propTypes = {\r\n    perspectiveNear : PropTypes.number.isRequire,\r\n    perspectiveFar : PropTypes.number.isRequired,\r\n    onGetComp : PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n    this.mode = {\r\n      near : 2,\r\n      far : 2,\r\n      bt : 2\r\n    }\r\n  }\r\n\r\n  _handleSetPerspective = () => {\r\n    const comp = this.props.onGetComp()\r\n        , { near, far } = this\r\n\r\n    comp.perspectiveNear = near.getValue()\r\n    comp.perspectiveFar = far.getValue();\r\n    comp.createPerspective(comp);\r\n\r\n    this._setModeToAll(2);\r\n  }\r\n\r\n\r\n  render(){\r\n    const { perspectiveNear, perspectiveFar } = this.props\r\n        , onChangeMode = this._onChangeMode.bind(this)\r\n    return(\r\n      <div style={STYLE.ROW}>\r\n        <Label\r\n          style={STYLE.CAPTION}\r\n          title=\"perspective:\"\r\n        />\r\n        <Label\r\n          style={STYLE.LABEL}\r\n          title=\"near:\"\r\n        />\r\n        <InputFloat\r\n          ref={ comp => this.near = comp }\r\n          inputKey=\"near\"\r\n          inputStyle={STYLE.INPUT_FLOAT_2}\r\n          value={perspectiveNear}\r\n          onChangeMode={onChangeMode}\r\n          onKeyDownEnter={this._handleSetPerspective}\r\n        />\r\n        <Label\r\n          style={STYLE.LABEL}\r\n          title=\"far:\"\r\n        />\r\n        <InputFloat\r\n          ref={ comp => this.far = comp }\r\n          inputKey=\"far\"\r\n          value={perspectiveFar}\r\n          inputStyle={STYLE.INPUT_FLOAT_2}\r\n          onChangeMode={onChangeMode}\r\n          onKeyDownEnter={this._handleSetPerspective}\r\n        />\r\n        <ButtonSet\r\n           ref={ bt => this.bt = bt }\r\n           onClick={this._handleSetPerspective}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RowPerspective\r\n"]}