{"version":3,"sources":["../../../src/components/zhn-atoms/InputFloat.jsx"],"names":["_hmModeStyle","NOT_VALID","VALID_CHANGED","VALID_NOT_CHANGED","InputFloat","props","state","_getInitedState","nextProps","setState","inputStyle","id","value","mode","_hrStyle","ROOT","_handleClickRoot","Object","assign","ARROW","ARROW_PLUS","_increaseOnStep","DIV_INPUT","input","INPUT","_handleInputChange","_handleInputKeyDown","HR","ARROW_MINUS","_decreaseOnStep","parseFloat","initedValue","defaultProps","inputKey","step","onChangeMode","onKeyDownEnter","isOnChangeModeFn","isOnKeyDownEnterFn","_onTest","_calcMode","_isChanged","strOrNumber","valueNext","plus","toString","nextMode","_callOnChangeMode","minus","focus","event","strValue","target","_updateValue","keyCode","preventDefault","undefined","propTypes","string","object","oneOfType","number","func"],"mappings":"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","file":"InputFloat.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\nimport Big from 'big.js'\r\n\r\nimport { isFunction, isFloat } from '../../utils/is'\r\nimport STYLE from './InputFloat.Style';\r\n\r\nconst _hmModeStyle = {\r\n  0 : STYLE.NOT_VALID,\r\n  1 : STYLE.VALID_CHANGED,\r\n  2 : STYLE.VALID_NOT_CHANGED\r\n}\r\n\r\nclass InputFloat extends Component {\r\n   static propTypes = {\r\n     inputKey: PropTypes.string,\r\n     inputStyle: PropTypes.object,\r\n     value: PropTypes.oneOfType([\r\n       PropTypes.string,\r\n       PropTypes.number\r\n     ]),\r\n     step: PropTypes.number,\r\n     onChangeMode: PropTypes.func,\r\n     onKeyDownEnter: PropTypes.func\r\n   }\r\n   static defaultProps = {\r\n     inputKey: 'dfKey',\r\n     value: '0',\r\n     step: 0.1,\r\n     onChangeMode: () => {},\r\n     onKeyDownEnter: () => {}\r\n   }\r\n\r\n\r\n\r\n  _getInitedState = (props) => {\r\n     const { value, step, onChangeMode, onKeyDownEnter } = props\r\n\r\n     this.isOnChangeModeFn = isFunction(onChangeMode);\r\n     this.isOnKeyDownEnterFn = isFunction(onKeyDownEnter);\r\n\r\n     return {\r\n       mode : (this._onTest(value)) ? 2 : 0,\r\n       value : value,\r\n       initedValue : value,\r\n       step : step\r\n     };\r\n  }\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = this._getInitedState(props);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if (nextProps !== this.props){\r\n      this.setState(this._getInitedState(nextProps))\r\n    }\r\n  }\r\n\r\n  _calcMode = (value) => {\r\n    if (!this._onTest(value)){\r\n      return 0;\r\n    }\r\n    if (this._isChanged(value)){\r\n      return 1;\r\n    }\r\n    return 2;\r\n  }\r\n\r\n  _onTest = (strOrNumber) => {\r\n     return isFloat(strOrNumber);\r\n  }\r\n\r\n  _isChanged = (value) => {\r\n     return this.state.initedValue !== parseFloat(value);\r\n  }\r\n\r\n  _increaseOnStep = () => {\r\n    const { value, step } = this.state\r\n          , valueNext = (new Big(value)).plus(step).toString()\r\n          , nextMode = this._calcMode(valueNext)\r\n     this._callOnChangeMode(nextMode);\r\n     this.setState({\r\n        mode : nextMode,\r\n        value : valueNext\r\n     })\r\n  }\r\n\r\n  _decreaseOnStep = () => {\r\n    const { value, step } = this.state\r\n          , valueNext = (new Big(value)).minus(step).toString()\r\n          , nextMode = this._calcMode(valueNext)\r\n     this._callOnChangeMode(nextMode);\r\n     this.setState({\r\n        mode : nextMode,\r\n        value : valueNext\r\n     })\r\n  }\r\n\r\n  _handleClickRoot = () => {\r\n    this.input.focus();\r\n  }\r\n\r\n  _handleInputChange = (event) => {\r\n    const strValue = event.target.value\r\n    this._updateValue(strValue)\r\n  }\r\n\r\n  _handleInputKeyDown = (event) => {\r\n    switch(event.keyCode){\r\n      // enter\r\n       case 13 : {\r\n         if (this.isOnKeyDownEnterFn){\r\n           this.props.onKeyDownEnter();\r\n         }\r\n       break;}\r\n      // esc\r\n       case 27 :{\r\n          const { value, initedValue } = this.state\r\n          if ( value !== initedValue || \"\"+initedValue === \"0\") {\r\n            this._callOnChangeMode(2);\r\n            this.setState({ mode : 2, value : initedValue })\r\n          } else {\r\n            this._callOnChangeMode(1);\r\n            this.setState({ mode : 1, value : 0 })\r\n          }\r\n       break;}\r\n       //up\r\n       case 38 : {\r\n         event.preventDefault();\r\n         this._increaseOnStep();\r\n       break;}\r\n       //down\r\n       case 40 : {\r\n        event.preventDefault();\r\n        this._decreaseOnStep();\r\n       break;}\r\n       default : return undefined;\r\n    }\r\n  }\r\n\r\n  _callOnChangeMode = (nextMode) => {\r\n    const { mode } = this.state\r\n    if (this.isOnChangeModeFn && mode !== nextMode){\r\n      const { inputKey, onChangeMode } = this.props\r\n      onChangeMode(inputKey, nextMode);\r\n    }\r\n  }\r\n\r\n  _updateValue = (strValue) => {\r\n    const nextMode = this._calcMode(strValue)\r\n    this._callOnChangeMode(nextMode);\r\n    this.setState({\r\n      mode : nextMode,\r\n      value : strValue\r\n    })\r\n  }\r\n\r\n  render(){\r\n    const { inputStyle, id } = this.props\r\n        , { value, mode } = this.state\r\n        , _hrStyle = _hmModeStyle[mode]\r\n\r\n    return (\r\n      <div\r\n         style={STYLE.ROOT}\r\n         onClick={this._handleClickRoot}\r\n      >\r\n        <span\r\n           style={Object.assign({}, STYLE.ARROW, STYLE.ARROW_PLUS)}\r\n           onClick={this._increaseOnStep}\r\n        />\r\n        <div style={STYLE.DIV_INPUT}>\r\n          <input\r\n            ref={input => this.input = input }\r\n            id={id}\r\n            type=\"text\"\r\n            style={Object.assign({}, STYLE.INPUT, inputStyle)}\r\n            value={value}\r\n            onChange={this._handleInputChange}\r\n            onKeyDown={this._handleInputKeyDown}\r\n          />\r\n          <hr style={Object.assign({}, STYLE.HR, _hrStyle)}></hr>\r\n        </div>\r\n        <span\r\n           style={Object.assign({}, STYLE.ARROW, STYLE.ARROW_MINUS)}\r\n           onClick={this._decreaseOnStep}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getValue(){\r\n    return parseFloat(this.state.value);\r\n  }\r\n\r\n  setMode(mode){\r\n    if ( mode === 2){\r\n      const { value } = this.state\r\n      this.setState({ mode, initedValue : value })\r\n    } else {\r\n      this.setState({ mode })\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default InputFloat\r\n"]}