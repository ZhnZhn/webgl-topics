{"version":3,"sources":["../../../../src/components/topics/gl-props/TextureImage.js"],"names":["TextureImage","vertexShaderCode","fragmentShaderCode","valuesForInit","drawMode","topicLink","type","title","href","isPro","createVertices","target","vertices","vertexCount","length","gl","shaderProgram","buffer","fnGL","createBuffer","Float32Array","createAttrib","BYTES_PER_ELEMENT","loadTexture","image","document","createElement","crossOrigin","addEventListener","texture","createTexture","sampler","getUniformLocation","pixelStorei","UNPACK_FLIP_Y_WEBGL","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","texImage2D","RGB","UNSIGNED_BYTE","uniform1i","src","clearBuffers"],"mappings":"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","sourcesContent":["import fnGL from '../gl-fn/fnGL'\r\n\r\nconst TextureImage = {\r\n  vertexShaderCode : `\r\n  attribute vec4 coords;\r\n  attribute float pointSize;\r\n  uniform mat4 transformMatrix;\r\n  uniform mat4 perspectiveMatrix;\r\n  attribute vec4 colors;\r\n  varying vec4 varyingColors;\r\n\r\n  attribute vec2 textureCoords;\r\n  varying vec2 varyingTextureCoords;\r\n  void main(void){\r\n    gl_Position = perspectiveMatrix * transformMatrix * coords;\r\n    gl_PointSize = pointSize;\r\n    varyingColors = colors;\r\n\r\n    varyingTextureCoords = textureCoords;\r\n  }\r\n  `,\r\n  fragmentShaderCode : `\r\n  precision mediump float;\r\n  uniform vec4 color;\r\n  varying vec4 varyingColors;\r\n\r\n  varying vec2 varyingTextureCoords;\r\n  uniform sampler2D sampler;\r\n  void main(void) {\r\n    gl_FragColor = texture2D(sampler, varyingTextureCoords);\r\n  }\r\n  `,\r\n\r\n  valuesForInit : {\r\n    drawMode : \"TRIANGLE_STRIP\",\r\n    topicLink : {\r\n      type : 'EGGHEAD',\r\n      title : 'Egghead: Build Complex 3D models with WebGL',\r\n      href : 'https://egghead.io/courses/build-complex-3d-models-with-webgl',\r\n      isPro : true\r\n    }\r\n  },\r\n\r\n  createVertices : (target) => {\r\n    const vertices = target.vertices = [\r\n      -1, -1,  0, 0,\r\n       1, -1,  1, 0,\r\n      -1,  1,  0, 1,\r\n       1,  1,  1, 1\r\n    ]\r\n    target.vertexCount = vertices.length / 4;\r\n    const { gl, shaderProgram } = target\r\n    target.buffer = fnGL.createBuffer(gl, new Float32Array(vertices))\r\n    fnGL.createAttrib(\r\n      gl, shaderProgram, \"coords\", 2,\r\n      Float32Array.BYTES_PER_ELEMENT*4, 0,\r\n      false\r\n    ).createAttrib(\r\n      gl, shaderProgram, \"textureCoords\", 2,\r\n      Float32Array.BYTES_PER_ELEMENT*4,\r\n      Float32Array.BYTES_PER_ELEMENT*2,\r\n      false\r\n    );\r\n  },\r\n\r\n  loadTexture : (target) => {\r\n    const image = document.createElement(\"img\");\r\n    image.crossOrigin = \"\";\r\n    image.addEventListener(\"load\", function(){\r\n       const { gl, shaderProgram } = target\r\n           , texture = gl.createTexture()\r\n           , sampler = gl.getUniformLocation(shaderProgram, \"sampler\");\r\n\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(gl.TEXTURE_2D, texture);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGB, gl.RGB, gl.UNSIGNED_BYTE, image)\r\n        gl.uniform1i(sampler, 0);\r\n    })\r\n    //image.src = \"https://pbs.twimg.com/profile_images/664169149002874880/z1fmxo00.jpg\"\r\n    image.src = \"img/cat.jpg\";\r\n  },\r\n\r\n  clearBuffers : (target) => {\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default TextureImage\r\n"],"file":"TextureImage.js"}