{"version":3,"sources":["../../../../src/components/topics/gl-props/CoronaSample.js"],"names":["CoronaSample","valuesForInit","topicLink","type","title","href","isPro","createVertices","target","vertices","vertexCount","length","gl","shaderProgram","buffer","fnGL","createBuffer","Float32Array","createAttrib","BYTES_PER_ELEMENT","clearBuffers","deleteBuffer"],"mappings":"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","sourcesContent":["import fnGL from '../gl-fn/fnGL';\r\n\r\nconst CoronaSample = {\r\n\r\n  valuesForInit : {\r\n    topicLink : {\r\n      type : 'EGGHEAD',\r\n      title : 'Egghead: Build Complex 3D models with WebGL',\r\n      href : 'https://egghead.io/courses/build-complex-3d-models-with-webgl',\r\n      isPro : true\r\n    }\r\n  },\r\n\r\n  createVertices : (target) => {\r\n    const vertices = target.vertices = [\r\n      0.88, -0.25, -0.18,  1, 0, 0, 1,\r\n      0.9, 0.25, 0,        1, 0, 0, 1,\r\n      0.88, -0.25, 0.18,   1, 0, 0, 1,\r\n\r\n      0.85, -0.25, 0.29,   1, 1, 0, 1,\r\n      0.78, 0.25, 0.45,    1, 1, 0, 1,\r\n      0.67, -0.25, 0.6,    1, 1, 0, 1,\r\n\r\n      0.6, -0.25, 0.67,    0, 1, 0, 1,\r\n      0.45, 0.25, 0.78,    0, 1, 0, 1,\r\n      0.29, -0.25, 0.85,   0, 1, 0, 1,\r\n\r\n      0.18, -0.25, 0.88,   0, 1, 1, 1,\r\n      0, 0.25, 0.9,        0, 1, 1, 1,\r\n      -0.18, -0.25, 0.88,  0, 1, 1, 1,\r\n\r\n      -0.29, -0.25, 0.85,  0, 0, 1, 1,\r\n      -0.45, 0.25, 0.78,   0, 0, 1, 1,\r\n      -0.6, -0.25, 0.67,   0, 0, 1, 1\r\n    ];\r\n\r\n    target.vertexCount = vertices.length / 7\r\n\r\n    const { gl, shaderProgram } = target\r\n\r\n    target.buffer = fnGL.createBuffer(gl, new Float32Array(vertices))\r\n    fnGL.createAttrib(\r\n      gl, shaderProgram, \"coords\", 3,\r\n      Float32Array.BYTES_PER_ELEMENT*7, 0,\r\n      false\r\n    ).createAttrib(\r\n      gl, shaderProgram, \"colors\", 4,\r\n      Float32Array.BYTES_PER_ELEMENT*7,\r\n      Float32Array.BYTES_PER_ELEMENT*3\r\n    );\r\n  },\r\n\r\n  clearBuffers : (target) => {\r\n    const { gl, buffer } = target\r\n    gl.deleteBuffer(buffer)\r\n  }\r\n};\r\n\r\nexport default CoronaSample\r\n"],"file":"CoronaSample.js"}