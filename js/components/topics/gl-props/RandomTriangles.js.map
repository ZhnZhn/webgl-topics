{"version":3,"sources":["../../../../src/components/topics/gl-props/RandomTriangles.js"],"names":["RandomTriangles","valuesForInit","topicLink","type","title","href","createVertices","target","gl","shaderProgram","vertices","colors","vertexCount","i","push","Math","random","buffer","fnGL","createBuffer","Float32Array","createAttrib","colorBuffer","clearBuffers","deleteBuffer"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,aAAa,EAAG;AACdC,IAAAA,SAAS,EAAG;AACVC,MAAAA,IAAI,EAAG,SADG;AAEVC,MAAAA,KAAK,EAAG,uDAFE;AAGVC,MAAAA,IAAI,EAAG;AAHG;AADE,GADM;AAStBC,EAAAA,cAAc,EAAG,wBAACC,MAAD,EAAY;AAAA,QACnBC,EADmB,GACGD,MADH,CACnBC,EADmB;AAAA,QACfC,aADe,GACGF,MADH,CACfE,aADe;AAAA,QAErBC,QAFqB,GAEVH,MAAM,CAACG,QAAP,GAAkB,EAFR;AAAA,QAGrBC,MAHqB,GAGZJ,MAAM,CAACI,MAAP,GAAgB,EAHJ;AAAA,QAIrBC,WAJqB,GAIPL,MAAM,CAACK,WAAP,GAAqB,EAJd;;AAM3B,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAED,WAAjB,EAA8BC,CAAC,EAA/B,EAAkC;AAChCH,MAAAA,QAAQ,CAACI,IAAT,CAAcC,IAAI,CAACC,MAAL,KAAc,CAAd,GAAkB,CAAhC;AACAN,MAAAA,QAAQ,CAACI,IAAT,CAAcC,IAAI,CAACC,MAAL,KAAc,CAAd,GAAkB,CAAhC;AACAN,MAAAA,QAAQ,CAACI,IAAT,CAAcC,IAAI,CAACC,MAAL,KAAc,CAAd,GAAkB,CAAhC;AACAL,MAAAA,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,MAAL,EAAZ;AACAL,MAAAA,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,MAAL,EAAZ;AACAL,MAAAA,MAAM,CAACG,IAAP,CAAYC,IAAI,CAACC,MAAL,EAAZ;AACAL,MAAAA,MAAM,CAACG,IAAP,CAAY,CAAZ;AACD;;AAEDP,IAAAA,MAAM,CAACU,MAAP,GAAgBC,iBAAKC,YAAL,CAAkBX,EAAlB,EAAsB,IAAIY,YAAJ,CAAiBV,QAAjB,CAAtB,CAAhB;;AACAQ,qBAAKG,YAAL,CAAkBb,EAAlB,EAAsBC,aAAtB,EAAqC,QAArC,EAA+C,CAA/C;;AAEAF,IAAAA,MAAM,CAACe,WAAP,GAAqBJ,iBAAKC,YAAL,CAAkBX,EAAlB,EAAsB,IAAIY,YAAJ,CAAiBT,MAAjB,CAAtB,CAArB;;AACAO,qBAAKG,YAAL,CAAkBb,EAAlB,EAAsBC,aAAtB,EAAqC,QAArC,EAA+C,CAA/C;AACD,GA9BqB;AAgCtBc,EAAAA,YAAY,EAAG,sBAAChB,MAAD,EAAY;AAAA,QACjBC,EADiB,GACWD,MADX,CACjBC,EADiB;AAAA,QACbS,MADa,GACWV,MADX,CACbU,MADa;AAAA,QACLK,WADK,GACWf,MADX,CACLe,WADK;AAEzBd,IAAAA,EAAE,CAACgB,YAAH,CAAgBP,MAAhB;AACAT,IAAAA,EAAE,CAACgB,YAAH,CAAgBF,WAAhB;AACD;AApCqB,CAAxB;eAwCetB,e","sourcesContent":["import fnGL from '../gl-fn/fnGL';\r\n\r\nconst RandomTriangles = {\r\n  valuesForInit : {\r\n    topicLink : {\r\n      type : 'EGGHEAD',\r\n      title : 'Egghead : Course : Build Complex 3D models with WebGL',\r\n      href : 'https://egghead.io/courses/build-complex-3d-models-with-webgl'\r\n    }\r\n  },\r\n\r\n  createVertices : (target) => {\r\n    const { gl, shaderProgram } = target\r\n        , vertices = target.vertices = []\r\n        , colors = target.colors = []\r\n        , vertexCount = target.vertexCount = 30;\r\n\r\n    for (var i=0; i< vertexCount; i++){\r\n      vertices.push(Math.random()*2 - 1);\r\n      vertices.push(Math.random()*2 - 1);\r\n      vertices.push(Math.random()*2 - 1);\r\n      colors.push(Math.random());\r\n      colors.push(Math.random());\r\n      colors.push(Math.random());\r\n      colors.push(1);\r\n    }\r\n\r\n    target.buffer = fnGL.createBuffer(gl, new Float32Array(vertices));\r\n    fnGL.createAttrib(gl, shaderProgram, \"coords\", 3);\r\n\r\n    target.colorBuffer = fnGL.createBuffer(gl, new Float32Array(colors));\r\n    fnGL.createAttrib(gl, shaderProgram, \"colors\", 4)\r\n  },\r\n\r\n  clearBuffers : (target) => {\r\n    const { gl, buffer, colorBuffer } = target\r\n    gl.deleteBuffer(buffer)\r\n    gl.deleteBuffer(colorBuffer)\r\n  }\r\n\r\n}\r\n\r\nexport default RandomTriangles\r\n"],"file":"RandomTriangles.js"}