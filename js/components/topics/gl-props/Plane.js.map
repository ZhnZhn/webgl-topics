{"version":3,"sources":["../../../../src/components/topics/gl-props/Plane.js"],"names":["_fnAddVertice","vertices","i","push","Math","cos","sin","_fnAddColor","Plane","valuesForInit","drawMode","topicLink","type","title","href","isPro","createVertices","target","PI","vertexCount","length","gl","shaderProgram","buffer","createBuffer","Float32Array","createAttrib","BYTES_PER_ELEMENT","clearBuffers","deleteBuffer"],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,QAAD,EAAWC,CAAX,EAAiB;AACrCD,WAASE,IAAT,CAAcC,KAAKC,GAAL,CAASH,CAAT,CAAd;AACAD,WAASE,IAAT,CAAcC,KAAKE,GAAL,CAASJ,CAAT,CAAd;AACAD,WAASE,IAAT,CAAcC,KAAKE,GAAL,CAASJ,IAAI,EAAb,IAAmB,GAAjC;AACD,CAJD;;AAMA,IAAMK,cAAc,SAAdA,WAAc,CAACN,QAAD,EAAWC,CAAX,EAAiB;AACnCD,WAASE,IAAT,CAAcC,KAAKE,GAAL,CAASJ,IAAI,EAAb,IAAmB,GAAnB,GAAyB,GAAvC;AACAD,WAASE,IAAT,CAAcC,KAAKE,GAAL,CAASJ,IAAI,CAAb,IAAkB,GAAlB,GAAwB,GAAtC;AACAD,WAASE,IAAT,CAAcC,KAAKE,GAAL,CAASJ,IAAI,EAAb,IAAmB,GAAnB,GAAyB,GAAvC;AACAD,WAASE,IAAT,CAAc,CAAd;AACD,CALD;;AAOA,IAAMK,QAAQ;AACZC,iBAAgB;AACdC,cAAW,cADG;AAEdC,eAAY;AACVC,YAAO,SADG;AAEVC,aAAQ,uDAFE;AAGVC,YAAO,+DAHG;AAIVC,aAAQ;AAJE;AAFE,GADJ;;AAWZC,kBAAiB,wBAACC,MAAD,EAAY;AAC3B,QAAMhB,WAAWgB,OAAOhB,QAAP,GAAkB,EAAnC;AACA;AACAA,aAASE,IAAT,CAAe,CAAf,EAAkB,GAAlB,EAAuB,GAAvB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,CAAtC;AACA,SAAI,IAAID,IAAG,CAAX,EAAcA,IAAEE,KAAKc,EAAL,GAAU,CAA1B,EAA6BhB,KAAK,IAAlC,EAAuC;AACrCF,oBAAcC,QAAd,EAAwBC,CAAxB;AACAK,kBAAYN,QAAZ,EAAsBC,CAAtB;AACD;AACDA,QAAIE,KAAKc,EAAL,GAAU,CAAd;AACAlB,kBAAcC,QAAd,EAAwBC,CAAxB;AACAK,gBAAYN,QAAZ,EAAsBC,CAAtB;;AAEAe,WAAOE,WAAP,GAAqBlB,SAASmB,MAAT,GAAkB,CAAvC;;AAZ2B,QAcnBC,EAdmB,GAcGJ,MAdH,CAcnBI,EAdmB;AAAA,QAcfC,aAde,GAcGL,MAdH,CAcfK,aAde;;AAe3BL,WAAOM,MAAP,GAAgB,eAAKC,YAAL,CAAkBH,EAAlB,EAAsB,IAAII,YAAJ,CAAiBxB,QAAjB,CAAtB,CAAhB;AACA,mBAAKyB,YAAL,CACIL,EADJ,EACQC,aADR,EACuB,QADvB,EACiC,CADjC,EAEIG,aAAaE,iBAAb,GAA+B,CAFnC,EAEsC,CAFtC,EAGI,KAHJ,EAIGD,YAJH,CAKEL,EALF,EAKMC,aALN,EAKqB,QALrB,EAK+B,CAL/B,EAMEG,aAAaE,iBAAb,GAA+B,CANjC,EAOEF,aAAaE,iBAAb,GAA+B,CAPjC;AASH,GApCa;;AAsCbC,gBAAe,sBAACX,MAAD,EAAY;AAAA,QACjBI,EADiB,GACFJ,MADE,CACjBI,EADiB;AAAA,QACbE,MADa,GACFN,MADE,CACbM,MADa;;AAEzBF,OAAGQ,YAAH,CAAgBN,MAAhB;AACD;AAzCY,CAAd;;kBA4Cef,K","file":"Plane.js","sourcesContent":["import fnGL from '../gl-fn/fnGL'\r\n\r\nconst _fnAddVertice = (vertices, i) => {\r\n  vertices.push(Math.cos(i))\r\n  vertices.push(Math.sin(i))\r\n  vertices.push(Math.sin(i * 10) * 0.1)\r\n}\r\n\r\nconst _fnAddColor = (vertices, i) => {\r\n  vertices.push(Math.sin(i * 10) * 0.5 + 0.5)\r\n  vertices.push(Math.sin(i * 8) * 0.5 + 0.5)\r\n  vertices.push(Math.sin(i * 12) * 0.5 + 0.5)\r\n  vertices.push(1)\r\n}\r\n\r\nconst Plane = {\r\n  valuesForInit : {\r\n    drawMode : \"TRIANGLE_FAN\",\r\n    topicLink : {\r\n      type : 'EGGHEAD',\r\n      title : 'Egghead : Course : Build Complex 3D models with WebGL',\r\n      href : 'https://egghead.io/courses/build-complex-3d-models-with-webgl',\r\n      isPro : true\r\n    }    \r\n  },\r\n\r\n  createVertices : (target) => {\r\n    const vertices = target.vertices = [];\r\n    //vertices.push( 0, 0, 0,  0, 0, 0, 1);\r\n    vertices.push( 0, 0.9, 0.3,  1, 1, 1, 1);\r\n    for(var i =0; i<Math.PI * 2; i += 0.01){\r\n      _fnAddVertice(vertices, i);\r\n      _fnAddColor(vertices, i)\r\n    }\r\n    i = Math.PI * 2;\r\n    _fnAddVertice(vertices, i);\r\n    _fnAddColor(vertices, i);\r\n\r\n    target.vertexCount = vertices.length / 7;\r\n\r\n    const { gl, shaderProgram } = target\r\n    target.buffer = fnGL.createBuffer(gl, new Float32Array(vertices))\r\n    fnGL.createAttrib(\r\n        gl, shaderProgram, \"coords\", 3,\r\n        Float32Array.BYTES_PER_ELEMENT*7, 0,\r\n        false\r\n     ).createAttrib(\r\n      gl, shaderProgram, \"colors\", 4,\r\n      Float32Array.BYTES_PER_ELEMENT*7,\r\n      Float32Array.BYTES_PER_ELEMENT*3\r\n    );\r\n},\r\n\r\n clearBuffers : (target) => {\r\n   const { gl, buffer } = target\r\n   gl.deleteBuffer(buffer)\r\n }\r\n}\r\n\r\nexport default Plane\r\n"]}