{"version":3,"sources":["../../../../src/components/topics/gl-props/Cube.js"],"names":["Cube","valuesForInit","zMatrixTranslate","isDrawElemnts","topicLink","type","title","href","isPro","createVertices","target","vertices","vertexCount","length","gl","shaderProgram","buffer","createBuffer","Float32Array","createAttrib","BYTES_PER_ELEMENT","createIndices","indices","indexCount","indexBuffer","Uint8Array","clearBuffers","deleteBuffer"],"mappings":"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","file":"Cube.js","sourcesContent":["import fnGL from '../gl-fn/fnGL'\r\n\r\nconst Cube = {\r\n  valuesForInit : {\r\n    zMatrixTranslate : -4,\r\n    isDrawElemnts : true,\r\n    topicLink : {\r\n      type : 'EGGHEAD',\r\n      title : 'Egghead : Course : Build Complex 3D models with WebGL',\r\n      href : 'https://egghead.io/courses/build-complex-3d-models-with-webgl',\r\n      isPro : true\r\n    }    \r\n  },\r\n\r\n  createVertices : (target) => {\r\n    const vertices = target.vertices = [\r\n      -1, -1, -1,   1, 0, 0, 1,\r\n       1, -1, -1,   1, 1, 0, 1,\r\n      -1, 1, -1,    0, 1, 1, 1,\r\n       1, 1, -1,    0, 0, 1, 1,\r\n      -1, 1, 1,     1, 0.5, 0, 1,\r\n       1, 1, 1,     0.5, 1, 1, 1,\r\n      -1, -1, 1,    1, 0, 0.5, 1,\r\n       1, -1, 1,    0.5, 0, 1, 1\r\n    ];\r\n\r\n\r\n    target.vertexCount = vertices.length / 7;\r\n    const { gl, shaderProgram } = target\r\n\r\n    target.buffer = fnGL.createBuffer(gl, new Float32Array(vertices))\r\n    fnGL.createAttrib(\r\n        gl, shaderProgram, \"coords\", 3,\r\n        Float32Array.BYTES_PER_ELEMENT*7, 0,\r\n        false\r\n     ).createAttrib(\r\n      gl, shaderProgram, \"colors\", 4,\r\n      Float32Array.BYTES_PER_ELEMENT*7,\r\n      Float32Array.BYTES_PER_ELEMENT*3\r\n    );\r\n  },\r\n\r\n createIndices : (target) => {\r\n   const indices = target.indices = [\r\n    0, 1, 2,   1, 2, 3,\r\n    2, 3, 4,   3, 4, 5,\r\n    4, 5, 6,   5, 6, 7,\r\n    6, 7, 0,   7, 0, 1,\r\n    0, 2, 6,   2, 6, 4,\r\n    1, 3, 7,   3, 7, 5\r\n  ];\r\n  target.indexCount = indices.length;\r\n  const { gl } = target\r\n  target.indexBuffer = fnGL.createBuffer(\r\n    gl, new Uint8Array(indices), \"ELEMENT_ARRAY_BUFFER\"\r\n  );\r\n},\r\n\r\nclearBuffers : (target) => {\r\n  const { gl, buffer, indexBuffer } = target\r\n  gl.deleteBuffer(buffer);\r\n  gl.deleteBuffer(indexBuffer)\r\n}\r\n\r\n}\r\n\r\nexport default Cube\r\n"]}