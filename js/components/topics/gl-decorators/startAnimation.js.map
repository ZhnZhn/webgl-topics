{"version":3,"sources":["../../../../src/components/topics/gl-decorators/startAnimation.js"],"names":["_startAnimation","target","initGL","createShaders","createPerspective","setPointSize","configMatrix","draw","props","valuesForInit","_createVertices","createVertices","_createIndices","createIndices","_loadTexture","loadTexture","_draw","_valuesForInit","Object","assign","dfValues","key","isWithoutPerspective","isWithoutPointSize","startAnimation","prototype"],"mappings":";;;;;;;AAAA;;AACA;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAAY;AAAA,MAE/BC,MAF+B,GAM7BD,MAN6B,CAE/BC,MAF+B;AAAA,MAEvBC,aAFuB,GAM7BF,MAN6B,CAEvBE,aAFuB;AAAA,MAG/BC,iBAH+B,GAM7BH,MAN6B,CAG/BG,iBAH+B;AAAA,MAGZC,YAHY,GAM7BJ,MAN6B,CAGZI,YAHY;AAAA,MAGEC,YAHF,GAM7BL,MAN6B,CAGEK,YAHF;AAAA,MAI/BC,IAJ+B,GAM7BN,MAN6B,CAI/BM,IAJ+B;AAAA,MAK/BC,KAL+B,GAM7BP,MAN6B,CAK/BO,KAL+B;AAAA,MAQ/BC,aAR+B,GAa7BD,KAb6B,CAQ/BC,aAR+B;AAAA,MASdC,eATc,GAa7BF,KAb6B,CAS/BG,cAT+B;AAAA,MAUfC,cAVe,GAa7BJ,KAb6B,CAU/BK,aAV+B;AAAA,MAWjBC,YAXiB,GAa7BN,KAb6B,CAW/BO,WAX+B;AAAA,MAYxBC,KAZwB,GAa7BR,KAb6B,CAY/BD,IAZ+B;AAAA,MAcjCU,cAdiC,GAchBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBC,oBAAlB,EAA4BX,aAA5B,CAdgB;;AAgBvC,OAAI,IAAMY,GAAV,IAAiBJ,cAAjB,EAAgC;AAC9BhB,IAAAA,MAAM,CAACoB,GAAD,CAAN,GAAcJ,cAAc,CAACI,GAAD,CAA5B;AACD;;AAEDnB,EAAAA,MAAM,CAACD,MAAD,CAAN;AACAE,EAAAA,aAAa,CAACF,MAAD,CAAb;;AACAS,EAAAA,eAAe,CAACT,MAAD,CAAf;;AAEA,MAAI,CAACA,MAAM,CAACqB,oBAAZ,EAAiC;AAC/BlB,IAAAA,iBAAiB,CAACH,MAAD,CAAjB;AACD;;AAED,MAAI,CAACA,MAAM,CAACsB,kBAAZ,EAA+B;AAC7BlB,IAAAA,YAAY,CAACJ,MAAD,CAAZ;AACD;;AACDK,EAAAA,YAAY,CAACL,MAAD,CAAZ;;AAEA,MAAI,oBAAWW,cAAX,CAAJ,EAAgC;AAC9BA,IAAAA,cAAc,CAACX,MAAD,CAAd;AACD;;AACD,MAAG,oBAAWa,YAAX,CAAH,EAA6B;AAC3BA,IAAAA,YAAY,CAACb,MAAD,CAAZ;AACD;;AAED,MAAI,oBAAWe,KAAX,CAAJ,EAAsB;AAAEA,IAAAA,KAAK,CAACf,MAAD,CAAL;AAAc,GAAtC,MACsB;AAAEM,IAAAA,IAAI,CAACN,MAAD,CAAJ;AAAc;AACzC,CA1CM;;;;AA4CP,IAAMuB,cAAc,GAAG,SAAjBA,cAAiB,CAACvB,MAAD,EAAY;AACjCA,EAAAA,MAAM,CAACwB,SAAP,CAAiBD,cAAjB,GAAkCxB,eAAlC;AACD,CAFD;;eAIewB,c","sourcesContent":["import dfValues from '../gl-props/dfValues';\r\nimport { isFunction } from '../../../utils/is'\r\n\r\nexport const _startAnimation = (target) => {\r\n    const {\r\n            initGL, createShaders,\r\n            createPerspective, setPointSize, configMatrix,\r\n            draw,\r\n            props\r\n          } = target\r\n        , {\r\n            valuesForInit,\r\n            createVertices : _createVertices,\r\n            createIndices : _createIndices,\r\n            loadTexture : _loadTexture,\r\n            draw : _draw\r\n          } = props\r\n        , _valuesForInit = Object.assign({}, dfValues, valuesForInit)\r\n\r\n    for(const key in _valuesForInit){\r\n      target[key] = _valuesForInit[key]\r\n    }\r\n\r\n    initGL(target);\r\n    createShaders(target);\r\n    _createVertices(target);\r\n\r\n    if (!target.isWithoutPerspective){\r\n      createPerspective(target);\r\n    }\r\n\r\n    if (!target.isWithoutPointSize){\r\n      setPointSize(target);\r\n    }\r\n    configMatrix(target);\r\n\r\n    if (isFunction(_createIndices)) {\r\n      _createIndices(target)\r\n    }\r\n    if(isFunction(_loadTexture)) {\r\n      _loadTexture(target)\r\n    }\r\n\r\n    if (isFunction(_draw)){ _draw(target)}\r\n    else                  { draw(target) }    \r\n}\r\n\r\nconst startAnimation = (target) => {\r\n  target.prototype.startAnimation = _startAnimation\r\n}\r\n\r\nexport default startAnimation\r\n"],"file":"startAnimation.js"}