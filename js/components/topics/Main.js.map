{"version":3,"sources":["../../../src/components/topics/Main.jsx"],"names":["TopicWrapper","props","_onStore","bind","getComponentTopic","state","topidId","undefined","store","unsubscribe","listen","actionType","VIEW_TOPIC","setState","topicId","componentTopic","Comp","compProps","valuesForInit","_valuesForInit","Object","assign","comp","propTypes","shape","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AAEA;;;;AACA;;;;AAEA;;;;;;IAEMA,Y;;;AAOJ,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAGhB,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,OAAzB;AACA,UAAKE,KAAL,GAAa;AACXC,eAAUC;AADC,KAAb;AALgB;AAQjB;;;;wCAEkB;AAAA,UACRC,KADQ,GACE,KAAKP,KADP,CACRO,KADQ;;AAEhB,WAAKC,WAAL,GAAmBD,MAAME,MAAN,CAAa,KAAKR,QAAlB,CAAnB;AACF;;;6BAEQS,U,EAAYN,K,EAAM;AACzB,UAAIM,eAAe,2CAAuBC,UAA1C,EAAqD;AACnD,aAAKC,QAAL,CAAc,EAAEC,SAAUT,MAAMS,OAAlB,EAAd;AACD;AACF;;;2CAEqB;AACnB,WAAKL,WAAL;AACF;;;wCAEkB;AACjB,aAAO,KAAKM,cAAZ;AACD;;;6BAEO;AAAA;;AACA,UAAED,OAAF,GAAc,KAAKT,KAAnB,CAAES,OAAF;AAAA,0BACwB,4BAAaA,OAAb,CADxB;AAAA,UACFE,IADE,iBACFA,IADE;AAAA,UACUC,SADV,iBACIhB,KADJ;AAAA,kCAEmBgB,SAFnB,CAEFC,aAFE;AAAA,UAEFA,aAFE,yCAEY,EAFZ;AAAA,UAGJC,cAHI,GAGaC,OAAOC,MAAP,CAAc,EAAd,sBAA4BH,aAA5B,CAHb;;;AAMN,aACE;AAAA;AAAA,UAAK,WAAU,WAAf,EAA2B,MAAK,UAAhC;AACE;AAAA;AAAA,YAAM,WAAU,oBAAhB,EAAqC,UAAS,GAA9C,EAAkD,MAAK,MAAvD;AACE;AAAA;AAAA,cAAK,WAAU,KAAf;AACE,0CAAC,IAAD;AACG,mBAAM;AAAA,uBAAQ,OAAKH,cAAL,GAAsBO,IAA9B;AAAA;AADT,eAEOL,SAFP,EADF;AAKE;AACG,6BAAeE,cADlB;AAEG,yBAAW,KAAKf;AAFnB;AALF;AADF;AADF,OADF;AAgBD;;;;;wCA3DGJ,Y,CACGuB,S,GAAY;AACjBf,SAAQ,iBAAUgB,KAAV,CAAgB;AACtBd,YAAQ,iBAAUe;AADI,GAAhB;AADS,C;kBA6DNzB,Y","file":"Main.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nimport { RouterTopicActionTypes } from '../../flux/actions/RouterTopicActions'\r\n\r\nimport factoryTopic from './factoryTopic';\r\nimport PanelConfigGL from '../panel-config-gl/PanelConfigGL';\r\n\r\nimport dfValues from './gl-props/dfValues';\r\n\r\nclass TopicWrapper extends Component {\r\n  static propTypes = {\r\n    store : PropTypes.shape({\r\n      listen: PropTypes.func\r\n    })\r\n  }\r\n\r\n  constructor(props){\r\n    super()\r\n\r\n    this._onStore = this._onStore.bind(this)\r\n    this.getComponentTopic = this.getComponentTopic.bind(this);\r\n    this.state = {\r\n      topidId : undefined\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n     const { store } = this.props\r\n     this.unsubscribe = store.listen(this._onStore);\r\n  }\r\n\r\n  _onStore(actionType, state){\r\n    if (actionType === RouterTopicActionTypes.VIEW_TOPIC){\r\n      this.setState({ topicId : state.topicId })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n     this.unsubscribe()\r\n  }\r\n\r\n  getComponentTopic(){\r\n    return this.componentTopic;\r\n  }\r\n\r\n  render(){\r\n    const { topicId } = this.state\r\n    , { Comp, props:compProps } = factoryTopic(topicId)\r\n    , { valuesForInit={} } = compProps\r\n    , _valuesForInit = Object.assign({}, dfValues, valuesForInit)\r\n\r\n\r\n    return (\r\n      <div className=\"container\" role=\"document\">\r\n        <main className=\"container__content\" tabIndex=\"1\" role=\"main\">\r\n          <div className=\"row\">\r\n            <Comp\r\n               ref={ comp => this.componentTopic = comp }\r\n               {...compProps}\r\n            />\r\n            <PanelConfigGL\r\n               valuesForInit={_valuesForInit}\r\n               onGetComp={this.getComponentTopic}\r\n            />\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopicWrapper\r\n"]}