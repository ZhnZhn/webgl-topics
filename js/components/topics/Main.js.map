{"version":3,"sources":["../../../src/components/topics/Main.jsx"],"names":["TopicWrapper","store","topicId","setTopicId","refComp","getComponentTopic","current","actionType","state","RouterTopicActionTypes","VIEW_TOPIC","Comp","compProps","props","valuesForInit","_valuesForInit","dfValues"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AACA;;AAEA;;;;AAGA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACJ,sBADI;AAAA,MAC3BC,OAD2B;AAAA,MAClBC,UADkB;AAAA,MAEhCC,OAFgC,GAEtB,mBAAO,IAAP,CAFsB;AAAA,MAGhCC,iBAHgC,GAGZ,wBAAY;AAAA,WAAMD,OAAO,CAACE,OAAd;AAAA,GAAZ,EAAmC,EAAnC,CAHY;;AAKlC,6BAAUL,KAAV,EAAiB,UAACM,UAAD,EAAaC,KAAb,EAAuB;AACtC,QAAID,UAAU,KAAKE,2CAAuBC,UAA1C,EAAqD;AACnDP,MAAAA,UAAU,CAACK,KAAK,CAACN,OAAP,CAAV;AACD;AACF,GAJD;;AALkC,sBAWA,+BAAaA,OAAb,CAXA;AAAA,MAW1BS,IAX0B,iBAW1BA,IAX0B;AAAA,MAWdC,SAXc,iBAWpBC,KAXoB;AAAA,8BAYTD,SAZS,CAY9BE,aAZ8B;AAAA,MAY9BA,aAZ8B,sCAYhB,EAZgB;AAAA,MAahCC,cAbgC,iCAaVC,oBAbU,EAaGF,aAbH;;AAelC,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,IAAI,EAAC,UAAhC;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,oBAAhB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE,qBAAC,IAAD;AACG,UAAA,GAAG,EAAEV;AADR,WAEOQ,SAFP,EADF,eAKE,qBAAC,yBAAD;AACG,UAAA,aAAa,EAAEG,cADlB;AAEG,UAAA,SAAS,EAAEV;AAFd,UALF;AAAA;AADF;AADF,IADF;AAgBD,CA/BD;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;;;eAEeL,Y","sourcesContent":["import { useState, useRef, useCallback } from 'react';\r\n\r\nimport useListen from '../hooks/useListen'\r\n\r\nimport { RouterTopicActionTypes } from '../../flux/actions/RouterTopicActions'\r\n\r\nimport factoryTopic from './factoryTopic';\r\nimport PanelConfigGL from '../panel-config-gl/PanelConfigGL';\r\n\r\nimport dfValues from './gl-props/dfValues';\r\n\r\n\r\nconst TopicWrapper = ({ store }) => {\r\n  const [topicId, setTopicId] = useState()\r\n  , refComp = useRef(null)\r\n  , getComponentTopic = useCallback(() => refComp.current, []);\r\n\r\n  useListen(store, (actionType, state) => {\r\n    if (actionType === RouterTopicActionTypes.VIEW_TOPIC){\r\n      setTopicId(state.topicId)\r\n    }\r\n  })\r\n\r\n  const { Comp, props:compProps } = factoryTopic(topicId)\r\n  , { valuesForInit={} } = compProps\r\n  , _valuesForInit = { ...dfValues, ...valuesForInit };\r\n\r\n  return (\r\n    <div className=\"container\" role=\"document\">\r\n      <main className=\"container__content\" role=\"main\">\r\n        <div className=\"row\">\r\n          <Comp\r\n             ref={refComp}\r\n             {...compProps}\r\n          />\r\n          <PanelConfigGL\r\n             valuesForInit={_valuesForInit}\r\n             onGetComp={getComponentTopic}\r\n          />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\nTopicWrapper. propTypes = {\r\n  store: PropTypes.shape({\r\n    listen: PropTypes.func\r\n  })\r\n}\r\n*/\r\n\r\nexport default TopicWrapper\r\n"],"file":"Main.js"}