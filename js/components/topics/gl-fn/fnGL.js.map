{"version":3,"sources":["../../../../src/components/topics/gl-fn/fnGL.js"],"names":["fnGL","createBuffer","gl","bufferData","bufferType","buffer","bindBuffer","STATIC_DRAW","createAttrib","shaderProgram","attrName","dim","rawDim","offset","isBindBuffer","attr","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","ARRAY_BUFFER","translateMatrix","target","matrix","trZ","trZD","minTrZ","maxTrZ","trZStep","mat4","create","translate","multiply","rotateMatrix","rX","rY","rZ","rotateX","rotateY","rotateZ"],"mappings":"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","sourcesContent":["import { mat4 } from 'gl-matrix';\r\n\r\nconst  fnGL = {\r\n  createBuffer : (gl, bufferData, bufferType=\"ARRAY_BUFFER\") => {\r\n    const buffer = gl.createBuffer();\r\n    gl.bindBuffer(gl[bufferType], buffer);\r\n    gl.bufferData(gl[bufferType], bufferData, gl.STATIC_DRAW);\r\n    return buffer;\r\n  },\r\n\r\n  createAttrib : function(gl, shaderProgram, attrName, dim, rawDim=0, offset=0, isBindBuffer=true) {\r\n    const attr = gl.getAttribLocation(shaderProgram, attrName);\r\n    gl.vertexAttribPointer(attr, dim, gl.FLOAT, false, rawDim, offset);\r\n    gl.enableVertexAttribArray(attr);\r\n    if (isBindBuffer){\r\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  translateMatrix : (target) => {\r\n    const {\r\n            matrix,\r\n            trZ, trZD, minTrZ, maxTrZ, trZStep\r\n          } = target\r\n\r\n    if (trZD === -1) {\r\n      if (trZ>minTrZ){\r\n        target.trZ = trZ - trZStep\r\n      } else {\r\n       target.trZD = 1\r\n      }\r\n    } else {\r\n      if (trZ<maxTrZ){\r\n        target.trZ = trZ + trZStep\r\n      } else {\r\n       target.trZD = -1\r\n      }\r\n    }\r\n\r\n    const translateMatrix = mat4.create()\r\n    mat4.translate(translateMatrix, translateMatrix, [0, 0, target.trZD*trZStep])\r\n    mat4.multiply(matrix, translateMatrix, matrix)\r\n\r\n  },\r\n\r\n  rotateMatrix : (target) => {\r\n    const { matrix, rX, rY, rZ } = target\r\n    mat4.rotateX(matrix, matrix, rX);\r\n    mat4.rotateY(matrix, matrix, rY);\r\n    mat4.rotateZ(matrix, matrix, rZ);\r\n  }\r\n\r\n}\r\n\r\nexport default fnGL\r\n"],"file":"fnGL.js"}