{"version":3,"sources":["../../../src/components/topics/WebGLTopic.jsx"],"names":["WIDTH","HEIGHT","STYLE","ROOT","position","float","BT_RUN","top","right","WebGLTopic","props","_handleClickCanvas","isAnimate","forceUpdate","_renderTopicLink","valuesForInit","undefined","topicLink","type","Comp","isStopDraw","startAnimation","canvas","el","borderRadius","propTypes","object"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAMA,QAAQ,GAAd;AAAA,IACMC,SAAS,GADf;AAAA,IAEMC,QAAQ;AACRC,QAAO;AACLC,cAAW,UADN;AAELC,WAAQ;AAFH,GADC;AAKRC,UAAS;AACPF,cAAU,UADH;AAEPG,SAAK,KAFE;AAGPC,WAAQ;AAHD;AALD,CAFd;;IAsBMC,U;;;AAKJ,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAAA,UAoBlBC,kBApBkB,GAoBG,YAAM;AACzB,YAAKC,SAAL,GAAiB,CAAC,MAAKA,SAAvB;AACA,YAAKC,WAAL;AACD,KAvBiB;;AAAA,UAyBlBC,gBAzBkB,GAyBC,UAACC,aAAD,EAAmB;AACpC,UAAI,CAACA,aAAL,EAAmB;AACjB,eAAOC,SAAP;AACD,OAFD,MAEO;AAAA,oCACoBD,aADpB,CACGE,SADH;AAAA,YACGA,SADH,yCACa,EADb;AAAA,YAEGC,IAFH,GAEYD,SAFZ,CAEGC,IAFH;AAAA,YAGCC,IAHD,GAGQ,qBAAWD,IAAX,CAHR;;AAIL,YAAI,OAAOC,IAAP,KAAgB,WAApB,EAAgC;AAC9B,iBAAOH,SAAP;AACD,SAFD,MAGE,OAAQ,8BAAC,IAAD,EAAUC,SAAV,CAAR;AACH;AACF,KArCiB;;AAGhB,UAAKL,SAAL,GAAiB,IAAjB;AACA,UAAKQ,UAAL,GAAkB,KAAlB;AAJgB;AAKjB;;;;wCAEkB;AAAA,UACTC,cADS,GACU,KAAKX,KADf,CACTW,cADS;;AAEjB,UAAK,OAAOA,cAAP,KAA0B,UAA/B,EAA0C;AACxCA,uBAAe,IAAf;AACD,OAFD,MAEO;AACL,aAAKA,cAAL,CAAoB,IAApB;AACD;AACF;;;2CAEqB;AACpB,WAAKD,UAAL,GAAkB,IAAlB;AACD;;;6BAqBO;AAAA;;AAAA,UACEL,aADF,GACoB,KAAKL,KADzB,CACEK,aADF;;AAEN,aACE;AAAA;AAAA,UAAK,OAAOb,MAAMC,IAAlB;AACE;AAAA;AAAA;AACG,iBAAM;AAAA,qBAAM,OAAKmB,MAAL,GAAcC,EAApB;AAAA,aADT;AAEG,mBAAOvB,KAFV;AAGG,oBAAQC,MAHX;AAIG,mBAAO,EAAEuB,cAAc,KAAhB,EAJV;AAKG,qBAAS,KAAKb;AALjB;AAAA;AAQE;AAAA;AAAA;AAAA;AAAA,WARF;AAAA;AAAA,SADF;AAYK,aAAKC,SAAL,KAAmB,KAApB,IACA;AACE,mBAAQ,eADV;AAEE,iBAAOV,MAAMI,MAFf;AAGE,mBAAS,KAAKK;AAHhB,UAbJ;AAoBI,aAAKG,gBAAL,CAAsBC,aAAtB;AApBJ,OADF;AAyBD;;;;;wCAvEGN,U,CACIgB,S,GAAY;AACjBV,iBAAe,iBAAUW;AADR,C;kBAyEPjB,U","file":"WebGLTopic.js","sourcesContent":["import React, { Component, PropTypes } from 'react';\r\n\r\nimport RouterLink from './links/RouterLink';\r\n\r\nimport initGL from './gl-decorators/initGL';\r\nimport createShaders from './gl-decorators/createShaders';\r\nimport createPerspective from './gl-decorators/createPerspective';\r\nimport setPointSize from './gl-decorators/setPointSize';\r\nimport configMatrix from './gl-decorators/configMatrix';\r\nimport draw from './gl-decorators/draw';\r\nimport startAnimation from './gl-decorators/startAnimation';\r\n\r\nimport Button from '../zhn-atoms/Button';\r\n\r\nconst WIDTH = 500\r\n    , HEIGHT = 500\r\n    , STYLE = {\r\n      ROOT : {\r\n        position : 'relative',\r\n        float : 'left'\r\n      },\r\n      BT_RUN : {\r\n        position: 'absolute',\r\n        top: '8px',\r\n        right : '8px'\r\n      }\r\n    }\r\n\r\n\r\n@initGL\r\n@createShaders\r\n@createPerspective\r\n@setPointSize\r\n@configMatrix\r\n@draw\r\n@startAnimation\r\nclass WebGLTopic extends Component {\r\n   static propTypes = {\r\n     valuesForInit: PropTypes.object\r\n   }\r\n\r\n  constructor(props){\r\n    super();\r\n\r\n    this.isAnimate = true;\r\n    this.isStopDraw = false;\r\n  }\r\n\r\n  componentDidMount(){\r\n    const { startAnimation } = this.props\r\n    if ( typeof startAnimation === \"function\"){\r\n      startAnimation(this)\r\n    } else {\r\n      this.startAnimation(this);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this.isStopDraw = true\r\n  }\r\n\r\n  _handleClickCanvas = () => {\r\n    this.isAnimate = !this.isAnimate\r\n    this.forceUpdate();\r\n  }\r\n\r\n  _renderTopicLink = (valuesForInit) => {\r\n    if (!valuesForInit){\r\n      return undefined;\r\n    } else {\r\n      const { topicLink={} } = valuesForInit\r\n          , { type } = topicLink\r\n          , Comp = RouterLink[type]\r\n      if (typeof Comp === 'undefined'){\r\n        return undefined;\r\n      } else\r\n        return (<Comp {...topicLink} />);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const { valuesForInit } = this.props\r\n    return (\r\n      <div style={STYLE.ROOT}>\r\n        <canvas\r\n           ref={ el => this.canvas = el }\r\n           width={WIDTH}\r\n           height={HEIGHT}\r\n           style={{ borderRadius: '2px' }}\r\n           onClick={this._handleClickCanvas}\r\n        >\r\n          Your browser doesn't appear to support the\r\n          <code>&lt;canvas&gt;</code> element.\r\n        </canvas>\r\n        {\r\n          (this.isAnimate === false) &&\r\n          <Button\r\n            caption=\"Run Animation\"\r\n            style={STYLE.BT_RUN}\r\n            onClick={this._handleClickCanvas}\r\n         />\r\n        }\r\n        {\r\n          this._renderTopicLink(valuesForInit)\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebGLTopic\r\n"]}